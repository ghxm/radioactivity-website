
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>{{ site_title }}{% if meta.title %} > {{ meta.title }}{% endif %}</title>
    {% if meta.description %}
        <meta name="description" content="{{ meta.description|striptags }}" />
    {% endif %}
    {% if meta.robots %}
        <meta name="robots" content="{{ meta.robots }}" />
    {% endif %}

    {% if current_page %}
        <link rel="canonical" href="{{ current_page.url }}" />
    {% endif %}

    <link rel="apple-touch-icon" sizes="180x180" href="assets/favicon/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="assets/favicon/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="assets/favicon/favicon-16x16.png">
    <link rel="manifest" href="assets/favicon/site.webmanifest">
    <link rel="mask-icon" href="assets/favicon/safari-pinned-tab.svg" color="#5bbad5">
    <link rel="shortcut icon" href="assets/favicon/favicon.ico">
    <meta name="msapplication-TileColor" content="#da532c">
    <meta name="msapplication-config" content="assets/favicon/browserconfig.xml">
    <meta name="theme-color" content="#ffffff">

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">




    <!-- Bootstrap core CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>


    
    <!-- Custom styles for this template -->
    <link rel="stylesheet" href="{{ theme_url }}/css/grid.css" type="text/css" />
    <link rel="stylesheet" href="{{ theme_url }}/css/radioact.css" type="text/css" />


{% block include_header_end %}

{% endblock %}

<!--
  <script>if(!sessionStorage.getItem("_swa")&&document.referrer.indexOf(location.protocol+"//"+location.host)!== 0){fetch("https://counter.dev/track?"+new URLSearchParams({referrer:document.referrer,screen:screen.width+"x"+screen.height,user:"mxhg",utcoffset:"1"}))};sessionStorage.setItem("_swa","1");</script>
-->

  </head>

<body class="bg-offwhite">

  {% set stations = pages('_stations') %}


    
    <div>
    <header class="border-top border-black px-2 py-1 py-sm-3 my-0 mx-0 container-fluid site-header bg-white">

      <!---@TODO add chunt option -->

      <div class="row mx-0">

      <h2 class="text-center text-sm-start mb-0 mt-1">
      <a href="{{ base_url }}" class="text-decoration-none text-reset">{{ current_page.title }}</a> <a title="suggest a station (via e-mail)" href="mailto:{{ config.contact }}" style="text-decoration: none;">+<sup><span class="fs-6">@</span></sup></a></h2>
      <p id="tagline" class= "d-none d-md-block" >shamelessly copied from <a href="https://www.thewire.co.uk/issues/449" class="fw-bold text-decoration-none text-reset" target="_blank">W&thinsp;I&thinsp;R&thinsp;E</a> magazine.</p>

      </div>

      <div class="row my-0">

        <div id='stream' class="col col-12 col-md-2 ml-2 mt-md-1 px-4 mt-3 mb-3 mb-sm-2">
            <audio class = "w-100 pe-sm-5 mb-1 mb-sm-0" id="audio-player" controls="controls">
              <source id="audio-source" src="" type="audio/mp3" />
              Your browser does not support the audio element.
            </audio>
        </div>


        <div class="ps-4 pe-1 px-md-5 px-lg-3 ml-0 ml-xs-3 col col-7 col-md-4 align-items-center mt-md-1 px-4 mt-0 mb-2 mb-sm-2">
          <div id="now-playing" class="btn-group w-100">
            <button class = 'd-inline-block btn btn-outline-dark text-truncate'>
            <i class="bi bi-vinyl blink d-none d-sm-inline-block"></i> <span class = "small" id="player-station">(null)</span>
            </button>
          </div>
        </div>

        <div class="col col-5 col-md-6 pe-4 mt-md-1 px-4 mt-0 mb-2 mb-sm-2">
        <div class="float-end float-md-end d-flex flex-nowrap">
        <div class="w-auto d-inline-block me-1">
         <select id="stationselect" class="btn btn-outline-primary form-select w-100" >
            <optgroup>
              <option class="" selected disabled>Select</option>
               <option class="" selected disabled></option>
              {% for station in stations|filter((s) => s.id | split('/') | last != "chuntoo") %}
                <option value="{{ station.id | split('/') | last }}">{{ station.title }}</option>
              {% endfor %}
            </optgroup>
         </select> 
        </div>
        <span class="d-block d-inline-block me-1 btn-group">
          <a title = "Play a random station" class="btn btn-outline-primary text-reset text-decoration-none ps-2 ps-md-3 pe-2 pe-md-3" href='{{ current_page.id|link("#{url_params}&random=true") }}'><i class="fw-bold bi bi-shuffle"></i></a>
          <!--<button class="btn btn-outline-primary"><a onclick="" href='{{ current_page.id|link("#{url_params}&shuffle=true") }}'><i class="bi bi-shuffle"></i><i class="bi bi-grid-3x3"></i></a></button>-->
          </span>
          <span class="d-block d-inline-block me-md-1">
          {% if url_param('onair', 'boolean') %}
          <a title = "Show all stations" class="btn btn-outline-primary text-reset text-decoration-none" href='{{ current_page.id|link("#{url_params}&onair=false") }}'><span class="dot-air offline me-0 me-sm-1"></span><span class="d-none d-xl-inline-block">ALL</span></a>
            {% else %}
          <a title = "Show only stations that are live right now" class="btn btn-outline-primary text-reset text-decoration-none" href='{{ current_page.id|link("#{url_params}&onair=true") }}'><span class=""><span class="dot-air online me-0 me-sm-1"></span><span class="d-none d-xl-inline-block">LIVE</span></span></a>{% endif %}
          </span>
          <span class="d-none d-sm-inline-block">
          <a class="d-none d-md-inline-block btn btn-outline-primary text-reset text-decoration-none" {% if url_param('display', 'string') == 'list' %} title = "View as grid" href="{{ current_page.id|link }}"><i class="bi bi-grid-3x3"></i>{%else %} title = "View as list" href="{{ current_page.id|link('display=list') }}"><i class="bi bi-card-text"></i>{% endif %}</a>
          </span>
        </div>
        </div>

      </div>


    </header>


    <div id="page">

            <!---@TODO add chunt option -->



    <div>


    <div>

    <section class="page">

      <div id="shazam-row" class="row mx-2 row-cols-1 mb-3 d-none">

      <div class="col themed-grid-col">


      <div class="station-card rounded-0 card p-4">

                  <button class="btn float-left btn-outline-dark mb-4 " onclick="closeShazamBox()">Close</button>


        <div id="shazam-loading" class="h-100 d-none">
          <p class="text-center fw-bold fst-italic">
          Detecting Track ID...
          </p>
          </div>

          <div id="shazam-info" class="h-100  d-none">


            <div class="row">

            <div class="col-12 col-sm-6">

            <h6 class="text-center mb-3">Current</h6>
            <dl>
              <dt id="shazam-current-id" class = "fw-normal"></dt>
              <dd id="shazam-current-time" class = "fst-italic"></dd>
            </dl>

            </div>


            <div class="col-12 col-sm-6">

            <h6 class="text-center mt-3 mb-3 mt-sm-0">ID history</h6>
            <dl id = "shazam-previous">
            </dl>

            </div>

            </div>

</div>

        </div>

        </div>

      </div>

      <div class="row mx-2 row-cols-xl-5 row row-cols-lg-4 row-cols-md-3 row-cols-sm-2 row-cols-1 mb-3">


        {% if url_param('onair', 'boolean') or url_param('random', boolean) %}
          {% set stations = stations | filter(station => station.meta.stream_url[0] is not empty and station.meta.stream_url[0][2] is not empty and station.meta.stream_url[0][2] == "online") %} <!-- filter online stations depending on whether first stream in list is online (should therefore always be main station) -->
        {% endif %}

        {% if url_param('shuffle', 'boolean') %}
            {% set random_stations = [] %}
            {% for i in 1..stations | length %}
              {% set random_stations = random_stations | merge([random(stations | filter(value => value not in random_stations))]) %}
            {% endfor %}
            {% set stations = random_stations %}
        {% endif %}

        {% if url_param('display', 'string') == 'list' %}


        <table class="station-table table table-hover table-responsive-sm">
          <thead>
            <tr>
              <th scope="col">Name</th>
              <th scope="col">Location</th>
              <th scope="col">Hours</th>
              <th scope="col">rec'd</th>
              <th scope="col">Description</th>
              <th scope="col">Play</th>
              <th scope="col">Website</th>
              <th scope="col">Support</th>
            </tr>
          </thead>
          <tbody>
          {% for station in stations|filter((s) => s.id | split('/') | last != "chuntoo") %}

            <tr class = "station-row" id="{{ station.id | split('/') | last }}">
              <th scope="row">{{ station.title }}</th>
              <td>{{ station.meta.location }}</td>
              <td>{{ station.meta.play_time }}</td>
              <td>{% if station.meta.recommended is defined %}{% for rec in station.meta.recommended %}<span class="align-middle badge bg-dark rec-badge">{{ rec }}</span>{% endfor %}{% endif %}</td>
              <td>{{ station.meta.description }}</td>
              <td>{% for stream in station.meta.stream_url %}
                {% if stream[2] is empty  %}
                  {% set online_status = '' %}
                {% else %}
                  {% set online_status = stream[2] %}
                {% endif %}
                <button class="btn btn-link py-0" type="button" onclick="loadStream('{{ station.meta.title }}', '{{ stream[1] }}', '{{ station.id | split('/') | last }}')">
                  <span title="station appears to be {{ online_status }}" class="dot-air {{ online_status }}"></span><span class="iconify" data-icon="bi:play-fill"></span>
                </button>
                <noscript>enable <code>js</code></noscript>{% endfor %}</td>
              <td><a href="{{ station.meta.url }}">{{ station.meta.url|replace({'https://': '', 'http://': '', 'www.': '', '/': ''}) }}/</a></td>
              <td><a class="btn btn-link py-0  fw-900" href="{% if station.meta.support is not empty %}{{station.meta.support}}" target="_blank{% else %}mailto:{{ config.contact }}?subject={{ station.title }} information&body=Hi, here's some additional information on {{ station.title }}: "
              class="link-danger{% endif %}">
                <a href="{% if station.meta.support is not empty %}{{station.meta.support}}" title="Support the station" class = "text-decoration-none" target="_blank{% else %}mailto:{{ config.contact }}?subject={{ station.title }} information&body=Hi, here's some additional information on {{ station.title }}: " title="Submit a station support link via e-mail" class="text-decoration-none link-danger{% endif %}">{% if station.meta.support is empty %}<i class="bi bi-life-preserver"></i>{% else %}<i class="bi bi-life-preserver"></i></a>{% endif %}</a>
              </td>
            </tr>
          {% endfor %}

          </tbody>
       </table>

        {% else %}

          {% for station in stations|filter((s) => s.id | split('/') | last != "chuntoo") %}

                <div class="col themed-grid-col">
                    <div id="{{ station.id | split('/') | last }}" class="station-card rounded-0 card h-100">
                        <img src="{{ assets_url }}/images/{{ station.meta.logo }}" class="rounded-0 card-img-top img-fluid d-none d-sm-block" alt="{{ station.meta.title }} logo">
                        <div class="card-body">
                            <h5 class="card-title">{{ station.title }} 
                            {% if station.meta.recommended is defined %} {% for rec in station.meta.recommended %}<h6><span class="position-absolute top-0 start-50 translate-middle badge bg-dark">{{ rec }}</span></h6>{% endfor %}{% endif %}</h5>
                            <h6 class="card-subtitle mb-2 text-muted"><span alt="location">{{ station.meta.location }}</span></h6>
                            <h6 class="card-subtitle mb-2 text-muted"><span alt="hours">{{ station.meta.play_time }}</span></h6>
                            <h6 class="card-subtitle mb-2"><span alt="hours"><a class="text-decoration-none" href="{{station.meta.url}}" target="_blank"><i class="bi bi-globe2"></i></a>
                            <a href="{% if station.meta.support is not empty %}{{station.meta.support}}" title="Support the station" class = "text-decoration-none" target="_blank{% else %}mailto:{{ config.contact }}?subject={{ station.title }} information&body=Hi, here's some additional information on {{ station.title }}: " title="Submit a station support link via e-mail" class="text-decoration-none link-danger{% endif %}">{% if station.meta.support is empty %}<i class="bi bi-life-preserver"></i>{% else %}<i class="bi bi-life-preserver"></i></a>{% endif %}</a>
                            </span></h6>
                            <div class="d-md-none">
                              <details>
                                <p class="card-text station-description">
                                {{ station.meta.description }}</p>
                              </details>
                            </div>
                            <div class="d-none d-md-block">
                                <p class="card-text station-description">{{ station.meta.description }}</p>
                            </div>
                        </div>
                        <ul class="list-group list-group-flush">
                            {% for stream in station.meta.stream_url %}
                            {% if stream[2] is empty  %}
                              {% set online_status = '' %}
                            {% else %}
                              {% set online_status = stream[2] %}
                            {% endif%}
                            <button class="list-group-item fw-bold" onclick="loadStream('{{ station.meta.title }}', '{{ stream[1] }}', '{{ station.id | split('/') | last }}')"><span title="station appears to be {{ online_status }}" class="dot-air {{ online_status }}"></span></span>Play {{ stream[0] }}</button>
                            {% endfor %}
                        </ul>
                    </div>

                </div>
              

            {% endfor %}

            <div class="col d-none d-sm-block themed-grid-col d-none" id="chat-card">
                          <div class="station-card rounded-0 card h-100 p-1">
                                          <button id="btn-load-chat" class="btn btn-primary mt-2 mb-2 mx-2" onclick="loadChat()">Load chatroom</button>
                                          <button id="btn-open-chat" class="btn btn-primary mx-2" onclick="window.open('https://chuntoo.chatango.com');">Open chatroom in new window</button>
                                        <script id="chatangoscript" class="d-none" data-cfasync="false" async src="//st.chatango.com/js/gz/emb.js" style="width: 100%;height: 100%;">{"handle":"chuntoo","arch":"js","styles":{"a":"ffffff","c":"000000","d":"000000","f":0,"i":0,"k":"000000","l":"000000","m":"CC0000","n":"FFFFFF","p":"10.26","q":"000000","usricon":0,"sbc":"000000","fwtickm":0}}</script>
                                        <noscript><p>Please enable JavaScript to see the chatroom or enable JavaScript and go to <a href="https://chuntoo.chatango.com">chuntoo.chatango.com</a>.</p></noscript>
                          </div>


            </div>
        {% endif %}


      </div>
    </div>
  </section> 
</div>

<footer class="small text-center border-top border-bottom border-black pt-3 pb-3 text-muted bg-white">
  This is a website under development meant for private use only. Copyrights for the content are held by the respective stations.<br>
  All times in local station time. Contact: {{ config.contact }}. <a class="text-reset fw-bold text-decoration-none" href="{{ "ch3"|link }}">Ch3</a>.
</footer>

<script>

// make chat card visible by removing d-none class
document.addEventListener("DOMContentLoaded", function() {
  document.getElementById('chat-card').classList.remove('d-none');
});

// function to load chatangao chat
function loadChat() {
    document.getElementById('btn-load-chat').classList.add('d-none');
    document.getElementById('btn-open-chat').classList.add('d-none');
  document.getElementById('chatangoscript').classList.remove('d-none');
}

</script>

<!--- make selector jump to-->
<script>
  // jump on slection change

  document.getElementById('stationselect').onchange= function() {
    window.location.hash=this.value;

    var selected = document.getElementById('stationselect').options.selectedIndex;

  };
</script>


    <script>
    // hide audio element in stream div
    var streamDiv = document.getElementById("stream");

    // add play button to stream div
    streamDiv.innerHTML += `<div class="btn-group w-100" role="group">
    <button class="btn btn-outline-dark fw-bold" id="btn-play" onclick="playPause()">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-play-fill" viewBox="0 0 16 16">
            <path d="m11.596 8.697-6.363 3.692c-.54.313-1.233-.066-1.233-.697V4.308c0-.63.692-1.01 1.233-.696l6.363 3.692a.802.802 0 0 1 0 1.393z"/>
        </svg>
    </button>
    <button class="btn btn-outline-dark fw-bold" id="btn-vol-down" onclick="volumeDown(0.1)">
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-volume-down-fill" viewBox="0 0 16 16">
        <path d="M9 4a.5.5 0 0 0-.812-.39L5.825 5.5H3.5A.5.5 0 0 0 3 6v4a.5.5 0 0 0 .5.5h2.325l2.363 1.89A.5.5 0 0 0 9 12V4zm3.025 4a4.486 4.486 0 0 1-1.318 3.182L10 10.475A3.489 3.489 0 0 0 11.025 8 3.49 3.49 0 0 0 10 5.525l.707-.707A4.486 4.486 0 0 1 12.025 8z"/>
    </svg>
    </button>
    <button class="btn btn-outline-dark fw-bold" id="btn-vol-up" onclick="volumeUp(0.1)">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-volume-up-fill" viewBox="0 0 16 16">
            <path d="M11.536 14.01A8.473 8.473 0 0 0 14.026 8a8.473 8.473 0 0 0-2.49-6.01l-.708.707A7.476 7.476 0 0 1 13.025 8c0 2.071-.84 3.946-2.197 5.303l.708.707z"/>
            <path d="M10.121 12.596A6.48 6.48 0 0 0 12.025 8a6.48 6.48 0 0 0-1.904-4.596l-.707.707A5.483 5.483 0 0 1 11.025 8a5.483 5.483 0 0 1-1.61 3.89l.706.706z"/>
            <path d="M8.707 11.182A4.486 4.486 0 0 0 10.025 8a4.486 4.486 0 0 0-1.318-3.182L8 5.525A3.489 3.489 0 0 1 9.025 8 3.49 3.49 0 0 1 8 10.475l.707.707zM6.717 3.55A.5.5 0 0 1 7 4v8a.5.5 0 0 1-.812.39L3.825 10.5H1.5A.5.5 0 0 1 1 10V6a.5.5 0 0 1 .5-.5h2.325l2.363-1.89a.5.5 0 0 1 .529-.06z"/>
        </svg>
    </button>
    </div>`;

    window.audio = streamDiv.getElementsByTagName("audio")[0];

    window.audio.classList.add("d-none");

    window.audio.onclick = playPause();

    window.audio.pause();



    // if src empty, disable play button
    if (window.audio.src == "") {
        document.getElementById("btn-play").disabled = true;
    }


    window.playBtn = document.getElementById("btn-play");

    var showPlayButton = function () {
      // replace button icon with play
      window.playBtn.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-play-fill" viewBox="0 0 16 16">
  <path d="m11.596 8.697-6.363 3.692c-.54.313-1.233-.066-1.233-.697V4.308c0-.63.692-1.01 1.233-.696l6.363 3.692a.802.802 0 0 1 0 1.393z"/>
  </svg>`;
};


    window.audio.addEventListener('pause', showPlayButton);
    window.audio.addEventListener('error', showPlayButton);


    window.audio.addEventListener('play', (event) => {

  
            // replace  button icon with pause
            window.playBtn.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-stop-fill" viewBox="0 0 16 16">
              <path d="M5 3.5h6A1.5 1.5 0 0 1 12.5 5v6a1.5 1.5 0 0 1-1.5 1.5H5A1.5 1.5 0 0 1 3.5 11V5A1.5 1.5 0 0 1 5 3.5z"/>
            </svg>`;


    });


    if ('mediaSession' in navigator) {


      navigator.mediaSession.setActionHandler('play', playPause);

      navigator.mediaSession.setActionHandler('pause', playPause);

  
    }



    // play stream on button click
    function playPause() {

      var btnVolUp = document.getElementById("btn-vol-up");
      var btnVolDown = document.getElementById("btn-vol-down");

      var audio = window.audio

      if (audio.volume<0.1){
            btnVolDown.disabled = true;
        } else if (audio.volume>0.9){
            btnVolUp.disabled = true;
        } else {
            btnVolUp.disabled = false;
            btnVolDown.disabled = false;
        }


        document.getElementById("btn-play").disabled = false;


        if(audio.paused) {
          
            audio.load();
            audio.play();

              try {
                  navigator.mediaSession.playbackState = 'playing';
              } catch (error) {
                
              }


        } else {
            audio.pause()

              try {
                  navigator.mediaSession.playbackState = 'paused';
              } catch (error) {
                
              }

        }
    }

    function volumeDown(val=0.1) {

        // vol down button
        var btnUp = document.getElementById("btn-vol-up");
        var btnDown = document.getElementById("btn-vol-down");
        var audio = window.audio;

        audio.volume -= val;

        //console.log(audio.volume);

        if (audio.volume < 0.1) {
            btnDown.disabled = true;
            btnUp.disabled = false;
        } else {
            btnUp.disabled = false;
        }

    }

    function volumeUp(val=0.1) {

        // vol down button
        var btnUp = document.getElementById("btn-vol-up");
        var btnDown = document.getElementById("btn-vol-down");
        var audio = window.audio;
        
        audio.volume += val;

        if (audio.volume >= 0.9) {
            btnUp.disabled = true;
            btnDown.disabled = false;
        } else {
            btnDown.disabled = false;
        }
    }


  const originalTitle = document.getElementsByTagName('title')[0].innerHTML;


  function updateMediaSession(stationName = '', stationID = 'Live') {

        if ("mediaSession" in navigator) {
            console.log("Media Session API supported!");
            navigator.mediaSession.metadata = new MediaMetadata({
                title: 'Live',
                artist: stationName,
                album: "Radio",
                artwork: [
                { src: '',   sizes: '526x626',   type: 'image/jpg' },
                ]
            });
        } else {
            console.log("Media Session API not supported.");
        }
  }

  function loadStream(stationName, streamUrl, stationID){
      
      var player=document.getElementById('audio-player');
      var source=document.getElementById('audio-source');
      var listening=document.getElementById('player-station');
      var title=document.getElementsByTagName('title')[0];

      player.title=stationName;
      
      source.src=streamUrl;
      
      listening.innerHTML = '<a title="jump to station in grid/list" class="text-reset text-decoration-none" href="#'+ stationID + '">' + stationName + '</a>';
      title.innerHTML = originalTitle + " (" + stationName + ")";

      activateShazamButton();

      player.load();
      playPause();

      updateMediaSession(stationName=stationName, stationID=stationID);


  }

  </script>

  <script>

  var nowPlayingBtns = document.getElementById('now-playing')

  // add shazam button to now playing
  var shazamBtn = document.createElement('button');

  shazamBtn.setAttribute('class', 'd-inline-block btn btn-outline-dark text-truncate');
    shazamBtn.setAttribute('id', 'shazam-button');


  shazamBtn.innerHTML = `<i class="bi bi-shazam"></i> <span class = "small"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-file-music-fill" viewBox="0 0 16 16">
  <path d="M12 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zm-.5 4.11v1.8l-2.5.5v5.09c0 .495-.301.883-.662 1.123C7.974 12.866 7.499 13 7 13c-.5 0-.974-.134-1.338-.377-.36-.24-.662-.628-.662-1.123s.301-.883.662-1.123C6.026 10.134 6.501 10 7 10c.356 0 .7.068 1 .196V4.41a1 1 0 0 1 .804-.98l1.5-.3a1 1 0 0 1 1.196.98z"/>
</svg> ID</span>`;

  shazamBtn.setAttribute('onclick', 'shazamUrl()');

  // deactive shazam button

  shazamBtn.setAttribute('disabled', 'true');

  nowPlayingBtns.appendChild(shazamBtn);

  function activateShazamButton() {
    document.getElementById('shazam-button').removeAttribute('disabled');
  }



  function parseShazapiResponse (resp) {

    var response = {
      time: resp.timestamp,
    }

    response.artist = '';
    response.title = '';

    try {
      response.artist = resp.shazam.track.subtitle
      response.title = resp.shazam.track.title
    } catch (error) {
      
    }

    if (response.artist == '' && response.title == '') {
      response.displayTrack = 'No ID found';
    } else {
      response.displayTrack = response.artist + ' - ' + response.title;
    }

    return response;

  }

  function shazamUrl () {


    var CurrentStreamUrl = document.getElementById('audio-source').src;

    var CurrentStreamName = document.getElementById('player-station').innerText;


    var url = CurrentStreamUrl;


    openShazamBox();

    // display the loading text
    document.getElementById('shazam-loading').classList.remove('d-none');

    // hide the info text
    if (!document.getElementById('shazam-info').classList.contains('d-none')) {
      document.getElementById('shazam-info').classList.add('d-none');
    }

    // make a post request to shazam api
    var xhr = new XMLHttpRequest();
    xhr.open("POST", "https://api.radioactivity.directory/shazam/detect", true);
    xhr.send(JSON.stringify({
        url: url,
        history: 5,
        requester: "radioactivity.directory"
    }))

    xhr.onload = function() {

      console.log(xhr.response);

      if (xhr.status == 200) {

        console.log("Shazam API request successful");

        var current = parseShazapiResponse(JSON.parse(xhr.response));

        // add current info
        document.getElementById('shazam-current-time').innerHTML = current.time;
        document.getElementById('shazam-current-id').innerHTML = current.displayTrack;

        // add history info
        var history = JSON.parse(xhr.response).history;

        var shazamPrevious = document.getElementById('shazam-previous');

        // loop through history
        for (let i = 0; i < history.length; i++) {
          const element = history[i];

          var historyItem = parseShazapiResponse(element);

          // create a new dd element
          var newDD = document.createElement('dd');

          // add the time
          newDD.innerHTML = historyItem.time;

          // create a new dt element
          var newDT = document.createElement('dt');

          // add the id
          newDT.innerHTML = historyItem.displayTrack;

          newDT.setAttribute('class', 'fw-normal');
          newDD.setAttribute('class', 'fst-italic');

          // add the dt and dd to the dl
          shazamPrevious.appendChild(newDT);
          shazamPrevious.appendChild(newDD);

        }



      } else {
        // add current info
        document.getElementById('shazam-current-time').innerHTML = "Error";
        document.getElementById('shazam-current-id').innerHTML = "Error";
      }

      // hide loading, show info
      document.getElementById('shazam-loading').classList.add('d-none');
      document.getElementById('shazam-info').classList.remove('d-none');

      // delete xhr
      xhr = null;
      
  }

  };

 function openShazamBox() {

    var shazamBox = document.getElementById('shazam-row');

    // if shazam box is already open, close it
    if (!shazamBox.classList.contains('d-none')) {
      closeShazamBox();
    }

    shazamBox.classList.remove('d-none');

    // scroll to shazam box
    shazamBox.scrollIntoView({behavior: "smooth", block: "center", inline: "nearest"});
  
  }

  function closeShazamBox() {
    var shazamBox = document.getElementById('shazam-row');

    // clear shazam-previous
    document.getElementById('shazam-previous').innerHTML = '';

    // clear current info
    document.getElementById('shazam-current-time').innerHTML = '';
    document.getElementById('shazam-current-id').innerHTML = '';

    if (shazamBox.classList.contains('d-none')) {
      return;
    }

    shazamBox.classList.add('d-none');

  }
  

  </script>

  <script>

    // remove focus from all buttons
    document.querySelectorAll('button').forEach(function(button) {
        button.setAttribute('onfocus', 'this.blur()');
    });

    // the same for all links posing as buttons
    document.querySelectorAll('a.btn').forEach(function(button) {
        button.setAttribute('onfocus', 'this.blur()');
    });

    </script>

{% if url_param('random', 'boolean') %}

    {% set random_station = random(stations) %}
    {% set random_station_name =  random_station.meta.title %}
    {% set random_station_url = random(random_station.meta.stream_url)[1] %}

    <script>
    loadStream('{{random_station_name}}', '{{random_station_url}}', '{{random_station.id | split('/') | last}}');
    </script>

{% endif %}


<script src="https://code.iconify.design/2/2.1.1/iconify.min.js"></script>

    
</body>
</html>
